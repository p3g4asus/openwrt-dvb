--- a/dvbdevice.c	2019-10-22 11:37:54.000000000 +0200
+++ b/dvbdevice.c	2019-10-22 12:07:10.000000000 +0200
@@ -848,13 +848,13 @@
            tone = SEC_TONE_OFF;
            volt = SEC_VOLTAGE_13;
            }
         CHECK(ioctl(fd_frontend, FE_SET_VOLTAGE, volt));
         CHECK(ioctl(fd_frontend, FE_SET_TONE, tone));
         }
-     frequency = abs(frequency); // Allow for C-band, where the frequency is less than the LOF
+     frequency = (unsigned int)abs((int)frequency); // Allow for C-band, where the frequency is less than the LOF
 
      // DVB-S/DVB-S2 (common parts)
      SETCMD(DTV_FREQUENCY, frequency * 1000UL);
      SETCMD(DTV_MODULATION, dtp.Modulation());
      SETCMD(DTV_SYMBOL_RATE, channel.Srate() * 1000UL);
      SETCMD(DTV_INNER_FEC, dtp.CoderateH());
--- a/remux.c	2019-10-22 11:36:31.000000000 +0200
+++ b/remux.c	2019-10-22 12:15:18.000000000 +0200
@@ -1627,17 +1627,17 @@
                           Div += parser->IFrameTemporalReferenceOffset();
                        if (Div <= 0)
                           Div = 1;
                        uint32_t Delta = ptsValues[0] / Div;
                        // determine frame info:
                        if (isVideo) {
-                          if (abs(Delta - 3600) <= 1)
+                          if (abs((int)(Delta - 3600)) <= 1)
                              framesPerSecond = 25.0;
                           else if (Delta % 3003 == 0)
                              framesPerSecond = 30.0 / 1.001;
-                          else if (abs(Delta - 1800) <= 1)
+                          else if (abs((int)(Delta - 1800)) <= 1)
                              framesPerSecond = 50.0;
                           else if (Delta == 1501)
                              framesPerSecond = 60.0 / 1.001;
                           else {
                              framesPerSecond = DEFAULTFRAMESPERSECOND;
                              dsyslog("unknown frame delta (%d), assuming %5.2f fps", Delta, DEFAULTFRAMESPERSECOND);
